akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = INFO
  fork-join-executor {
    # The parallelism factor is used to determine thread pool size using the
    # following formula: ceil(available processors * factor). Resulting size
    # is then bounded by the parallelism-min and parallelism-max values.
    parallelism-factor = 3.0

    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 8

    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 64
  }
}

play {
  crypto.secret = "QY#q!^N|3]HzkzVdHouAeUE=cEZb+k`Hy;]N1`3nHLv'vhF=2J-K>zq-+V13./5m"

  http {
    errorHandler = "utils.HelloErrorHandler"
    play.http.filters = "utils.HelloFilters"
    session {
      cookieName = "HS_"
      //      domain = ".helloscala.com"
    }
  }
}

hellocode {
  website {
    owner-id = "HS"
    host = "http://www.hellocode.test"
    avatar-default = "/assets/img/avatar-default.png"
  }

  file-upload {
    local-path = "/data/hellocode/files"
    host = "http://files.hellocode.club"
    context = ""
  }

  schedule {
    duration = 10.s
    daily-schedule = "02:00:00"
  }

  cookie {
    //    domain = ".helloscala.test"
    path = "/"
    # ç§’
    maxAge = 1800
    httpOnly = false
  }

  db {
    dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
    connectionTimeout = 10s
    properties = {
      databaseName = "hc_site"
      user = "hellouser"
      password = "hellopass"
    }
  }

  oauth2 {
    QQ {
      authorization_url = "https://graph.qq.com/oauth2.0/authorize"
      response_type = "code"
      access_token_url = "https://graph.qq.com/oauth2.0/token"
      grant_type = "authorization_code"
      //      client_id = ${QQ_client_id}
      //      client_secret = ${QQ_client_secret}
      redirect_uri = "/oauth/qq"
      scope = "get_user_info,add_topic,add_one_blog,add_album,upload_pic,list_album,add_share,check_page_fans,add_t,add_pic_t,del_t,get_repost_list,get_info,get_other_info,get_fanslist,get_idollist,add_idol,del_ido,get_tenpay_addr"
      me = "https://graph.qq.com/oauth2.0/me?access_token=%s"
    }

    WEIBO {
      authorization_url = "https://api.weibo.com/oauth2/authorize?forcelogin=true"
      response_type = "code"
      access_token_url = "https://api.weibo.com/oauth2/access_token"
      grant_type = "authorization_code"
      //      client_id = ${WEIBO_client_id}
      //      client_secret = ${WEIBO_client_secret}
      redirect_uri = "/oauth/weibo"
      scope = "all"
    }
  }

}
